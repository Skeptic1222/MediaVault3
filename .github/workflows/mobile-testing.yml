name: Mobile UI Testing

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  mobile-tests:
    name: Mobile Tests - ${{ matrix.device }}
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        device:
          - iphone-se
          - iphone-12-pro
          - iphone-12-pro-max
          - pixel-5
          - galaxy-s21
          - ipad-portrait
          - ipad-landscape

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium webkit

      - name: Type checking
        run: npm run check

      - name: Build application
        run: npm run build

      - name: Setup test database
        run: |
          # Use in-memory SQLite for CI testing
          export DATABASE_URL="sqlite::memory:"
          npm run db:push || true

      - name: Run mobile tests for ${{ matrix.device }}
        run: npx playwright test tests/e2e/mobile-ux.spec.ts --project=${{ matrix.device }}
        env:
          BASE_URL: http://localhost:3000/mediavault
          CI: true

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: mobile-test-results-${{ matrix.device }}
          path: |
            playwright-report/
            test-results/
            test-results.json
          retention-days: 30

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: mobile-screenshots-${{ matrix.device }}
          path: test-results/**/*.png
          retention-days: 7

  visual-regression:
    name: Visual Regression Testing
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium webkit

      - name: Build application
        run: npm run build

      - name: Run visual regression tests
        run: npx playwright test tests/e2e/mobile-ux.spec.ts --grep "Visual Regression"
        env:
          BASE_URL: http://localhost:3000/mediavault
          CI: true

      - name: Upload baseline screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: visual-baseline-screenshots
          path: |
            tests/e2e/**/*.png
            test-results/**/*-actual.png
            test-results/**/*-expected.png
            test-results/**/*-diff.png
          retention-days: 30

  performance-budget:
    name: Mobile Performance Budget
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Lighthouse CI
        run: npm install -g @lhci/cli@0.13.x

      - name: Build application
        run: npm run build

      - name: Run Lighthouse CI
        run: |
          npm run start &
          sleep 10
          lhci autorun --config=.lighthouserc.json || true
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-results
          path: .lighthouseci/
          retention-days: 7

  accessibility:
    name: Mobile Accessibility Testing
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Build application
        run: npm run build

      - name: Run accessibility tests
        run: npx playwright test tests/e2e/mobile-ux.spec.ts --grep "Accessibility"
        env:
          BASE_URL: http://localhost:3000/mediavault
          CI: true

      - name: Upload accessibility report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: accessibility-report
          path: playwright-report/
          retention-days: 30

  summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [mobile-tests, visual-regression, performance-budget, accessibility]
    if: always()

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Generate summary report
        run: |
          echo "# Mobile Testing Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Test Results" >> $GITHUB_STEP_SUMMARY
          echo "- Mobile Tests: ${{ needs.mobile-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Visual Regression: ${{ needs.visual-regression.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Performance Budget: ${{ needs.performance-budget.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Accessibility: ${{ needs.accessibility.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Tested Devices" >> $GITHUB_STEP_SUMMARY
          echo "- iPhone SE (375x667)" >> $GITHUB_STEP_SUMMARY
          echo "- iPhone 12 Pro (390x844)" >> $GITHUB_STEP_SUMMARY
          echo "- iPhone 12 Pro Max (428x926)" >> $GITHUB_STEP_SUMMARY
          echo "- Pixel 5 (393x851)" >> $GITHUB_STEP_SUMMARY
          echo "- Samsung Galaxy S21 (360x800)" >> $GITHUB_STEP_SUMMARY
          echo "- iPad Portrait (768x1024)" >> $GITHUB_STEP_SUMMARY
          echo "- iPad Landscape (1024x768)" >> $GITHUB_STEP_SUMMARY
